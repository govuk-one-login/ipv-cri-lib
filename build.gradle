plugins {
	id "java-library"
	id "java-test-fixtures"
	id "org.sonarqube"
	id "com.diffplug.spotless"
	id "jacoco"
	id "maven-publish"
	id "signing"
	id "io.github.gradle-nexus.publish-plugin" version "1.0.0"
}

// please update RELEASE_NOTES.md when you update this version
def buildVersion = "2.2.3"

defaultTasks 'clean', 'spotlessApply', 'build'

ext {
	dependencyVersions = [
		jackson_version          : "2.13.1",
		aws_lambda_events_version: "3.11.0",
		aws_powertools_version   : "1.12.0",
		nimbusds_oauth_version   : "11.2",
		nimbusds_jwt_version     : "9.36",
		junit                    : "5.8.2",
		mockito					 : "4.3.1",
		glassfish_version        : "3.0.3",
		cucumber_version         : "7.9.0"
	]
}

repositories {
	maven {
		url 'https://gds.jfrog.io/artifactory/di-allowed-repos'
	}
}

java {
	sourceCompatibility = JavaVersion.VERSION_11
	targetCompatibility = JavaVersion.VERSION_11
	withJavadocJar()
	withSourcesJar()
}

configurations {
	aws
	cloudformation
	dynamodb
	jackson
	lambda
	sqs
	sso
	kms
	lambda_tests
	lettuce
	nimbus
	ssm
	tests
	test_runtime
	gson
	powertools
	mockito
	cucumber
}

// The dynamodb enhanced package loads the apache-client as well as the spi-client, so
// we need to add the apache-client to the dependencies exclusion to not get a mismatch
configurations.all {
	exclude group:"software.amazon.awssdk", module: "apache-client"
}

dependencies {
	aws platform('software.amazon.awssdk:bom:2.20.162')

	cloudformation "software.amazon.awssdk:cloudformation"

	dynamodb "software.amazon.awssdk:dynamodb",
			"software.amazon.awssdk:dynamodb-enhanced"

	gson "com.google.code.gson:gson:2.8.9"

	lambda "software.amazon.awssdk:lambda",
			"com.amazonaws:aws-lambda-java-events:${dependencyVersions.aws_lambda_events_version}",
			"software.amazon.lambda:powertools-parameters:${dependencyVersions.aws_powertools_version}"

	sqs "software.amazon.awssdk:sqs"

	sso "software.amazon.awssdk:sso",
			"software.amazon.awssdk:ssooidc"

	kms "software.amazon.awssdk:kms"

	lambda_tests "software.amazon.awssdk:aws-lambda-java-tests:1.1.1"

	jackson "com.fasterxml.jackson.core:jackson-core:${dependencyVersions.jackson_version}",
			"com.fasterxml.jackson.core:jackson-databind:${dependencyVersions.jackson_version}",
			"com.fasterxml.jackson.core:jackson-annotations:${dependencyVersions.jackson_version}",
			"com.fasterxml.jackson.datatype:jackson-datatype-jsr310:${dependencyVersions.jackson_version}",
			"com.fasterxml.jackson.datatype:jackson-datatype-jdk8:${dependencyVersions.jackson_version}"

	powertools "software.amazon.lambda:powertools-logging:${dependencyVersions.aws_powertools_version}",
			"software.amazon.lambda:powertools-metrics:${dependencyVersions.aws_powertools_version}"

	nimbus "com.nimbusds:oauth2-oidc-sdk:${dependencyVersions.nimbusds_oauth_version}",
			"com.nimbusds:nimbus-jose-jwt:${dependencyVersions.nimbusds_jwt_version}"

	tests "org.junit.jupiter:junit-jupiter-api:${dependencyVersions.junit}",
			"org.junit.jupiter:junit-jupiter-params:${dependencyVersions.junit}",
			"org.mockito:mockito-junit-jupiter:${dependencyVersions.mockito}",
			"org.mockito:mockito-inline:${dependencyVersions.mockito}",
			"org.hamcrest:hamcrest:2.2",
			"uk.org.webcompere:system-stubs-jupiter:2.0.1",
			"uk.org.webcompere:system-stubs-core:2.0.1"

	test_runtime "org.junit.jupiter:junit-jupiter-engine:${dependencyVersions.junit}"

	cucumber "io.cucumber:cucumber-java:${dependencyVersions.cucumber_version}",
			"io.cucumber:cucumber-picocontainer:${dependencyVersions.cucumber_version}"
}

dependencies {

	implementation configurations.aws,
			configurations.lambda,
			configurations.jackson,
			configurations.dynamodb,
			configurations.nimbus,
			configurations.powertools,
			configurations.sqs,
			configurations.kms

	testImplementation configurations.tests

	testRuntimeOnly configurations.test_runtime

	testFixturesApi configurations.aws
	testFixturesApi configurations.sqs
	testFixturesApi configurations.cloudformation
	testFixturesApi	configurations.cucumber

	testFixturesImplementation configurations.jackson
	testFixturesImplementation configurations.tests

	testFixturesRuntimeOnly configurations.sso
}

tasks.named("jar") {
	manifest {
		attributes("Implementation-Title": project.name,
		"Implementation-Version": project.version)
	}
}

test {
	useJUnitPlatform()
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.required.set(true)
	}
}

sonar {
	properties {
		property "sonar.projectKey", "ipv-cri-lib"
		property "sonar.organization", "govuk-one-login"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}

spotless {
	java {
		target "**/src/**/*.java"
		googleJavaFormat("1.13.0").aosp()
		importOrder "", "javax", "java", "\\#"
		endWithNewline()
	}
	groovyGradle {
		target '**/*.gradle'
		greclipse()
		trimTrailingWhitespace()
		endWithNewline()
	}
}

clean.doFirst {
	delete "${rootDir}/dist/"
	delete "${rootDir}/.aws-sam"
}

gradle.projectsEvaluated {
	tasks.withType(JavaCompile) {
		options.compilerArgs << "-Xlint:unchecked"
	}
}

group = "uk.gov.account"
version = "$buildVersion"

nexusPublishing {
	useStaging = true
	repositories {
		sonatype {
			// because we registered in Sonatype after 24 Feb 2021, we provide these URIs
			// see: https://github.com/gradle-nexus/publish-plugin/blob/master/README.md
			nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
			snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
			username = System.getenv("SONATYPE_USERNAME")
			password = System.getenv("SONATYPE_PASSWORD")
		}
	}
}

signing {
	useInMemoryPgpKeys(
			System.getenv("MAVEN_CENTRAL_SIGNING_KEY"),
			System.getenv("MAVEN_CENTRAL_SIGNING_KEY_PASSWORD")
			)
	sign publishing.publications
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			pom {
				name = 'Digital Identity Credential Issuer common libraries'
				packaging = 'jar'
				description = 'Digital Identity Credential Issuer common libraries'
				url = 'https://github.com/govuk-one-login/ipv-cri-lib'
				artifactId = 'cri-common-lib'

				scm {
					url = 'https://github.com/govuk-one-login/ipv-cri-lib'
					connection = 'scm:git:git://github.com/govuk-one-login/ipv-cri-lib.git'
					developerConnection = 'scm:git:ssh://git@github.com:govuk-one-login/ipv-cri-lib.git'
				}

				licenses {
					license {
						name = 'MIT Licence'
						url = 'https://github.com/govuk-one-login/ipv-cri-lib/blob/main/LICENSE'
						distribution = 'repo'
					}
				}

				developers {
					developer {
						name = 'GDS Developers'
					}
				}
			}
			// The java-test-fixtures plugin results in the API dependencies for testFixtures
			// being added to the pom with <scope>compile</scope> & <optional>true</optional>.
			// This is not desired as the scope is incorrect and the testFixtures are referenced
			// via gradle module metadata. The code below removes the unwanted optional dependencies
			// from the pom.
			pom.withXml {
				asNode().dependencies.dependency.each { dep ->
					if(dep.optional.text() == 'true') {
						dep.parent().remove(dep)
					}
				}
			}
		}
	}
}
